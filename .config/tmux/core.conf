# vim: filetype=tmux
# Common platform-agnostic tmux configuration

# Reset to default bindings
unbind -a
source ~/.config/tmux/0-default.conf

unbind C-b
set -g prefix 'M-\'    # right hand
bind 'M-\' send-prefix
set -g prefix2 M-`     # left hand lol
bind 'M-`' send-prefix

set -g default-command "ENV=~/.config/sh/rc exec bash --noprofile --norc --posix"

# edit and reload tmux config while tmux is running
bind e split-window -h '\
    f=~/.config/tmux/core.conf && \
    printf "\033]2;%s\033\\" "$f" && \
    $EDITOR "$f" && \
    tmux source "$f" && \
    tmux display "tmux configuration reloaded"\
'
bind r source ~/.config/tmux/core.conf \; display "tmux configuration reloaded"

# quick escape for Neovim under Tmux. See the following:
# https://github.com/neovim/neovim/issues/2035, and
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -g escape-time 10

# idk
#set -g repeat-time 500

# more obvious splits
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# vi keys for copy mode + more bindings for variety and convenience
# copy mode things
set -g mode-keys vi
bind -T root         M-\[ copy-mode
bind -T root         M-\{ copy-mode \; send -X begin-selection \; send -X search-backward [‚ùØ@] # select up to our last command
bind -T root         M-\} copy-mode \; send -X begin-selection \; send -X search-forward [‚ùØ@] # searching forward
bind -T copy-mode-vi [    send -X search-backward [‚ùØ@] # so it's repeatable in copy-mode
bind -T copy-mode-vi ]    send -X search-forward [‚ùØ@] # so it's repeatable in copy-mode
bind -T copy-mode-vi v    send -X begin-selection
bind -T copy-mode-vi r    send -X rectangle-toggle
bind -T copy-mode-vi C-v  send -X begin-selection \; send -X rectangle-toggle
bind -T root         M-v  run-shell tmux-vim-copy-pane # it's like copy-mode-vi, but to the XTREME; see my comments in that file

# yank and paste
bind -T copy-mode-vi y     send -X copy-selection
bind -T copy-mode-vi Enter send -X copy-selection-and-cancel

# system specific; contains our paste root-table M-p binding
if 'test -n "$WSL_DISTRO_NAME"'   "source ~/.config/tmux/wsl.conf"
if "uname -v | grep -q Ubuntu"    "source ~/.config/tmux/linux.conf"
if "uname -v | grep -q Darwin"    "source ~/.config/tmux/macos.conf"

# For the Tmux command line
set -g status-keys emacs

# Vim style pane selection
bind -T prefix h select-pane -L
bind -T prefix j select-pane -D
bind -T prefix k select-pane -U
bind -T prefix l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -T root M-h select-pane -L
bind -T root M-j select-pane -D
bind -T root M-k select-pane -U
bind -T root M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -T root M-Left select-pane -L
bind -T root M-Right select-pane -R
bind -T root M-Up select-pane -U
bind -T root M-Down select-pane -D

# Use Alt-<number> to switch windows without prefix
# No 0 because our base-index below is 1.
# Maybe repurpose higher ones for something else,
# because we rarely use more than a few.
bind -T root M-1 select-window -t :=1
bind -T root M-2 select-window -t :=2
bind -T root M-3 select-window -t :=3
bind -T root M-4 select-window -t :=4
bind -T root M-5 select-window -t :=5
bind -T root M-6 select-window -t :=6
bind -T root M-7 select-window -t :=7
bind -T root M-8 select-window -t :=8
bind -T root M-9 select-window -t :=9

bind -T root M-q select-window -t :+1 # go to next
bind -T root M-w select-window -t :!  # go to last
                                      # don't really need a previous

# more hand friendly to 1 index
set -g base-index 1
set -g renumber-windows on

#set -g set-titles-string "#S"
set -g set-titles off
set -g automatic-rename off

# status line general
set -g status-position top
set -g status-justify left
set -g status-interval 3
set -g status-style 'fg=default,bg=default'

# status left
set -g status-left-length 85
set -g status-left "\
#[fg=black, bg=colour214]#{?client_prefix,#[bg=colour167],} ‚ùê #S #[fg=default,bg=default] \
#{sysstat_cpu} #{sysstat_mem} [#{sysstat_loadavg}] "
set -g @sysstat_mem_view_tmpl 'MEM:#[fg=#{mem.color}]#{mem.pused}#[default] #{mem.used}'

# Window names are set within our rc file; selected windows are highlighted
set -g window-status-format "#[fg=colour243]#{?window_zoomed_flag,üîç ,}#{window_index} #{window_name} #[fg=default,bg=default]"
set -g window-status-current-format "#[fg=colour226] #{?window_zoomed_flag,üîç ,}#{window_index} #{window_name} #[fg=default,bg=default]"

# status right
set -g status-right-length 140
set -g @spotify_playing_icon "‚ñ∂"
set -g @spotify_paused_icon "‚ùö‚ùö"
set -g status-right "#{music_status} #{track} - #{artist}  #[fg=colour171]%a %b %d %H:%M "

# pane settings
set -g pane-base-index 1
set -g pane-border-status bottom
set -g pane-border-format " #{pane_title} "
#set -g pane-border-format "#{?#{pane_active},bg=red fill=red,bg=blue fill=blue}]"
set -g pane-border-format "#[#{?#{pane_active},fg=white bg=black,fg=#5f5f5f bg=#0d0d0d}] #{pane_title} "

set -g pane-border-style 'fg=#0d0d0d,bg=#0d0d0d' #1f1f1f'
set -g pane-active-border-style 'fg=#ababab,bg=default' ##1f1f1f'

set -g window-style 'fg=white,bg=#0d0d0d' #0a0a0a'
set -g window-active-style 'fg=white,bg=black'

#  set -g status-bg black
#  set -g status-fg white
#
#
#  set -g status-style fg=yellow,dim
#
# set -g status-left-style bg=black
# set -g status-right-style bg=black
#
#  set -g window-status-style bg=black,dim
#  set -g window-status-current-style bg=black,bright

# misc
set -g monitor-activity on
set -g history-limit 10000
# set -g mouse on
# set -g default-terminal xterm-256color
# set -g default-terminal screen-256color
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

#####

# command aliases, e.g. tmux id

# returns an ID that can be used for -t (target-pane) arguments
set -g command-alias[1] id='display -p -F "#S.#I:#P"'

#####

# We don't need a session environment. We only use the global environment.
# Using the default doesn't interfere with anything, but it's cleaner to just
# get rid of it to avoid confusion between `tmux showenv` and `tmux showenv -g`.
# See the envupdate function in ~/.shrc.
set -g update-environment ""

#####

# (keep this at the very bottom)
source ~/.config/tmux/plugins.conf
