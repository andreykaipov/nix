# vim: filetype=tmux
#
# Just the styles. The color variables are set from nvim/lua/plugins.tmux.lua.
# See https://github.com/andreykaipov/tmux-colorscheme-sync.nvim.

# perhaps make this mustache templated so i can set it in nix?
#
active_pane_style=subtle # subtle (default) or chunky

# status
status_color_fg="#{@nvim_color_constant_fg}"
status_color_bg="#{@nvim_color_tabline_bg}"
status_edge_color_fg="#{@nvim_color_constant_fg}"
status_edge_color_bg="default"
client_prefix_style="#[fg=black#,bg=#{@nvim_color_constant_fg}]"
# pane
pane_fg="default"
pane_bg="default"
active_pane_fg="default"
active_pane_bg="black"
popup_pane_fg="default"
popup_pane_bg="default"
# border
active_pane_border_fg="$active_pane_bg"
pane_border_fg="#{@nvim_color_normal_bg}"
pane_border_bg="$pane_bg"
popup_pane_border_fg="$pane_border_fg"
%if "#{==:#{active_pane_style},chunky}"
    active_pane_border_bg="$active_pane_bg"
    popup_pane_border_bg="$popup_pane_bg"
%else
    active_pane_border_bg="$pane_bg"
    popup_pane_border_bg="$pane_bg"
%endif

# status line styles
set -g status-style "fg=default,bg=default" # default for transparency
set -g status-left-style "fg=$status_edge_color_fg,bg=$status_edge_color_bg"
set -g status-right-style "fg=$status_edge_color_fg,bg=$status_edge_color_bg"
set -g window-status-style "fg=$status_color_fg,bg=$status_color_bg"
set -g window-status-current-style "fg=$status_color_fg,bg=$status_color_bg reverse"
set -g window-status-activity-style "fg=$status_color_fg,bg=$status_color_bg blink"
set -g window-status-bell-style "fg=$status_color_fg,bg=$status_color_bg blink"
set -g window-status-last-style "fg=$status_color_fg,bg=$status_color_bg"
# pane styles
set -g window-style "fg=$pane_fg,bg=$pane_bg"
set -g window-active-style "fg=$active_pane_fg,bg=$active_pane_bg"
set -g popup-style "fg=$popup_pane_fg,bg=$popup_pane_bg"
# border colors
set -g pane-border-style "fg=$pane_border_fg,bg=$pane_border_bg"
set -g pane-active-border-style "fg=$active_pane_border_fg,bg=$active_pane_border_bg"
set -g popup-border-style "fg=$popup_pane_border_fg,bg=$popup_pane_border_bg"

# The OS window title, but Wezterm lets us remove it :)
set -g set-titles off
set -g set-titles-string "Terminal: #S.#I:#P #{session_alerts}"

# status line
#
# symbols like ÓÇ∏ ÓÇ∫ ÓÇº ÓÇæ would be fun but the styling becomes very annoying to maintain
# since we have toggle the styling on and off in the status-format for it actually show up in the intended way
# from: https://www.nerdfonts.com/cheat-sheet
#
# status line options
# TODO: experiment with just getting rid of the status entirely
set -g status on
set -g status-position top
set -g status-justify left # absolute-centre
set -g status-interval 3
# status line window names
set -g window-status-format " #{?window_zoomed_flag,üîç,#{window_index}} #{window_name} "
set -g window-status-current-format "#{E:window-status-format}"
set -g window-status-separator ' '
set -g status-left "#{?client_prefix,$client_prefix_style,} Óà± #S #[fg=default,bg=default] "
set -g status-right-length 80
set -g status-right " Ôê∫  %a %b %d %H:%M "

# borders
#
# border options
set -g pane-border-status off
set -g pane-border-format "#{pane_title}" # previously be managed by zsh hooks and vim-tpipeline
set -g pane-border-indicators off
set -g pane-border-lines single
set -g popup-border-lines single

# custom option https://github.com/tmux/tmux/pull/3798
# but with pane titles off technically i don't care about this anymore
set -g pane-border-indent 0
