#!/bin/sh
# Tmux has the option of setting its copy mode to have Vi-like bindings, but
# let's be honest... it's not really Vim. However, we can harness all the power
# of Vim by copying our pane output into Vim!
#
# This script does exactly that, while juggling our panes so that we can restore
# our current session seemlessly. The way it works is as follows:
#
# 1. Capture the pane output into a Tmux buffer
# 2. Open up a new window piping the contents of that buffer into Vim
# 3. Delete the buffer (who really cares, but why not?)
# 4. Swap the panes
# 5. Set a hook on the current pane to swap with the saved pane when exiting Vim
# 6. Exit Vim
#
# Seemless!

current_id="$(tmux display-message -p '#{session_name}:#{window_index}.#{pane_index}')"
temp_name="tmp[$current_id]"

# Prevent nested Vims
if tmux list-windows -a -F '#{window_name}' | grep -qFx "$temp_name"; then
	echo "!!!!!!!!!!!!!!!!!!!!!!!!!"
	echo "Hands off the trigger bud"
	exit
fi

tmux capture-pane -b output -eNJ -S-

# No clue how this sed works, it's to trim the trailing empty lines.
# See https://unix.stackexchange.com/q/552188/152529
# shellcheck disable=SC2016
new_id="$(
	tmux new-window \
	-d \
	-n "$temp_name" \
	-P -F '#{session_name}:#{window_index}.#{pane_index}' '
		tmux show-buffer -b output |
		sed -e :a -e "/^$/{\$d;N;ba" -e "}" |
		nvim -R +ColorHighlight +
	'
)"

# Alternative approach of doing this, for when the above window isn't send to
# the background
#new_id="$(tmux display-message -p '#{session_name}:#{window_index}.#{pane_index}')"
#tmux last-window
#tmux select-pane -t "$current_id"

# Dance and sweep
tmux delete-buffer -b output

# Once our panes are swapped, the new one is referred to by the "current" id
tmux swap-pane -s "$current_id" -t "$new_id" -Z

# My nvim's status seems to get a bit funky sometimes when I perform the swap,
# but any idempotent adjustment to the pane will fix it like below. However,
# I think the least jarring glitch is just swapping the pane again twice, as
# it'll only affect the pane instead of propogating to the window!

tmux swap-pane -s "$current_id" -t "$new_id" -Z
tmux swap-pane -s "$current_id" -t "$new_id" -Z
#tmux resize-pane -t "$current_id" -R 1
#tmux resize-pane -t "$current_id" -L 1
#tmux resize-pane -t "$current_id" -D 1
#tmux resize-pane -t "$current_id" -U 1
#tmux resize-pane -t "$current_id" -Z
#tmux resize-pane -t "$current_id" -Z

# Keep the current pane alive so we can still swap them back after exiting Vim,
# and then kill it.
tmux set-option -p -t "$current_id" remain-on-exit on

# The current pane will die when we're done with our temporary Vim session
tmux set-hook -t "$current_id" pane-died "
	swap-pane -s $current_id -t $new_id -Z ;
	kill-pane -t $new_id
"
