#!/bin/bash
# shellcheck disable=SC1090
#
# Replacement for readline's edit-and-execute-command function.
#
# Normally with the readline binding \C-x\C-e, Bash will open up our $EDITOR and
# allow us edit our command that way, and then execute it when we close our
# file. It uses `fc` under the hood (you can check this by printing out
# $BASH_COMMAND in a `precmd` hook). However, `fc` is kinda buggy! For one it
# inserts an empty line into my history file even though my HISTCONTROL is set
# to ignore spaces. It also doesn't play nice with my `precmd` and `postcmd`
# hooks either because it runs `set -v` before running the command. Even
# solutions like https://stackoverflow.com/a/40260404 didn't work. :(
#
# I spent too long figuring out how to work around their shit, so it seems like
# I have to do everything around here! So, this is a replacement. Refer to
# ~/.config/readline/inputrc to see how I invoke this.

# delete two minutes later in case we want to save our temp thing
trap '{ sleep 120; unlink "$f" 2>/dev/null; } &' INT TERM EXIT

f="$(mktemp).sh"

cat >"$f" <<EOF
#!/bin/sh

EOF

if echo "$EDITOR" | grep -q vi; then
	args='+2'
fi

"$EDITOR" $args "$f"

bat "$f"

. "$f"
